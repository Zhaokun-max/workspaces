



使用模块
    - 模块直接导入
        - 假如模块名称直接用数字开头,需要用import importlib
          - 语法
            import importlib
            # 01 为数字命名的包
            stu = importlib.import_module('01')
            stu1 = stu.Stundent()
            stu.say()
    - 语法
        import module_name
        module_name.function_name
        module_name.class_name

    -   import 模块  as 别名
        - 导入的时候同时给模块起一个别名
        - 其余用法跟第一种相同
        - import pre as stu
          st = stu.Student()
          st.day()

# 只导入被选定的类或函数
  - 如果函数和类是平级，那么就不需要类调用
from module_name import func_name, class_name
    stu = Student()
    stu.day()

# 导入模块中的所有类
from moudle_name  import *
    - 导入所有模块内容

# 可以有效避免模块代码被导入的时候执行的问题
# 所有程序的入口都以此为代码入口
if __name__=='__main__'

2. 模块的搜索路径和存储
- 什么是模块的搜索路径
    - 加载模块的时候，系统会在哪些地方寻找模块
- 系统默认的模块搜索路径
    import sys
    sys.path 属性可以获取路径列表
    # 案例pre03
- 添加搜索路径

     - sys.path.append(dir)

- 模块加载顺序
    - 先搜索内存中已经加载好的模块
    - 搜索python的内置模块
    - 搜索sys.path路径

# 包
- 包是一种组织管理代码的方式，包里面存放的是模块
- 用于将模块包含在一起的文件夹就是包
-自定义的包的结构

        /---包
        /---/===__init__.py 包的标志文件
        /===/=== 模块1
        /===/--- 模块2
        /---/--- 子包（子文件夹）
        /---/---/--- __init__.py 包的标志文件
        /===/===/--- 模块1
        /===/---/--- 模块2
- 包的导入操作

    import package_name
        直接导入一个包，可以使用__init__.py中内容
        使用方法
            package_name.faunc_name
            package_name.calss_name.fun_name()

        - 此种方式的访问内容
        - 案例 pkg01，pre04.py
    - import package_name as p
        -具体用法和作用方式，跟简单导入一致
        -注意的是此种方法默认对__init__.py的内容导入

    - import package_name.module
        - 导入包中的某一个模块
        -使用方法


                packname.module.func_name
                packname.module.calss.fun()
                packname.module.calss.var
              案例 pre05

    - import package.moudle as pm

- from ... import 导入
    - from package import module1, module2, module3
    - 此种方法导入不执行__init__的内容

        from pkg01 import po1
        po1.sayhello()
- from package import *
    - 导入当前包__init__.py 文件中的所有的函数和类
    - 使用方法

        - func_name()
        class_name.func_name()
        class_name.var

    - 案例pre06  注意导入执行的内容

- from package.module import *
    - 导入包中指定的模块的所有内容
    - 使用方法
        func_name()
        class_name.func_name()

- 在开发环境中经常会使用其他模块，可以再当前包中直接导入其他模块中的东西
    - import 完整的包或者模块的路径

- '__all__' 用法
    - 在使用form package  import * 的时候，*可以导入的内容
    - '__init__'.py 中如果文件为空，或者没有，'__all__' 那么可以把'__init__'中的内容导入
    - '__init__'如果设置了__all__的值，那么按照__all__指定的子包或者模块进行加载
    如此则不会凹入__init__中的内容
    - '__all__=['module,','module2','package',.....]'   pkg02  pre07


